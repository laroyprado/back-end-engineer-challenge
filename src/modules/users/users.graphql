scalar DateTime
scalar EmailAddress
scalar UUID
scalar URL
scalar JWT

type User {
  id: UUID!   
  firstName: String!  
  lastName: String!  
  fullName: String
  email: EmailAddress!   
  password: String!
  avatarURL: URL
  company: String!   
  createdAt: DateTime!
}

input CreateUserInput { 
  firstName: String!  
  lastName: String!  
  email: EmailAddress!   
  password: String!
  avatarURL: URL
  company: String! 
}

input UpdateUserInput {
  firstName: String  
  lastName: String  
  email: EmailAddress   
  password: String
  avatarURL: URL
  company: String 
}

type Query {
  users: [User]!
  user(id: UUID!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(id: UUID!, updateUserInput: UpdateUserInput!): User!
  removeUser(id: UUID!): User
}
