scalar DateTime
scalar EmailAddress
scalar UUID
scalar URL
scalar JWT
scalar Void

type User {
  id: UUID!   
  firstName: String!
  lastName: String!
  fullName: String
  email: EmailAddress!
  avatarURL: URL
  company: Company
  createdAt: DateTime!
}

type UserToValidate {
  id: UUID!   
  firstName: String!
  lastName: String!
  fullName: String
  email: EmailAddress!
  password: String!
  avatarURL: URL
  company: Company
  createdAt: DateTime!
}

type Company {
	id: UUID!
	name: String!
	users: [User]
}

input CreateUserInput { 
  firstName: String!
  lastName: String!
  email: EmailAddress!
  password: String!
  avatarURL: URL
  company: String!
}

input UpdateUserInput {
  firstName: String
  lastName: String
  email: EmailAddress
  password: String
  avatarURL: URL
  company: String
}

type Query {
  users: [User]!
  user(id: UUID!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(id: UUID!, updateUserInput: UpdateUserInput!): User!
  removeUser(id: UUID!): Void

}
